data Token (F:nat) (U:nat) =
  | cost<A:nat, B:nat, F2:nat, U2:nat>(Token F2 U2)
    with (Add F A) = (Add F2 B), (Add U B) = (Add U2 A)

decl type N : (nat -> nat)

goal N degree 0

decl val token : Token (N One) Z

cmd ret a = cost<One,Z>(token).ret(a)
