decl type int : +
decl type char : +
decl term z : int
decl term succ : (fun int -> (shift- int))

data list (c : +) =
  case nil()
  case cons(c, (list c))

term lz = cons(z, cons( z, nil() ))

decl term map : (fun (shift+ (fun int -> (shift- char))) (list int) -> (shift- (list char)))
