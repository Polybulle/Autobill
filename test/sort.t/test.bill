decl type int : +
decl type char : +
decl val z : int
decl val succ : (fun (int)-> thunk int)

data list (c : +) =
  | Nil()
  | Cons(c, (list c))

val lz = Cons(z, Cons( z, Nil ))

decl val map : (fun (closure(fun(int) -> thunk char), list int) -> thunk (list char))
