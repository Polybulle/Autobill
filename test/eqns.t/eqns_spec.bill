decl sort idx

decl type carrier : (idx -> -)

decl type max3 : (idx -> (idx -> (idx -> idx)))


comput foo_t =
  case this.Foo<x : idx, y : idx>().ret(carrier (max3 x x y))

comput bar_t =
  case this.Bar<x:idx, y:idx>().ret(carrier (max3 x y y))

decl val x : foo_t

val y = match this.Bar<x0:idx,y0:idx>().ret(a) -> x.Foo<x0,y0>().ret(a)
